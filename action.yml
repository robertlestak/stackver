---
name: 'stackver'
description: 'Automated dependency version management'
inputs:
  stack:
    description: 'Stack file, relative to the repository root'
    required: true
  daysUntilDanger:
    description: 'Days until danger'
    required: false
    default: "30"
  daysUntilWarning:
    description: 'Days until warning'
    required: false
    default: "60"
  stackVerVersion:
    description: 'StackVer version'
    required: false
    default: "latest"
  githubToken:
    description: 'GitHub token for creating PRs'
    required: true
  dryRun:
    description: 'Only show what would be updated'
    required: false
    default: "false"
  prTitle:
    description: 'Pull request title'
    required: false
    default: "Update dependency versions"
  prBranch:
    description: 'Branch name for pull request'
    required: false
    default: "stackver/update-dependencies"

runs:
  using: "composite"
  steps:
  - name: Check Runner OS
    if: ${{ runner.os != 'Linux' }}
    shell: bash
    run: |
      echo "::error title=â›” error hint::Support Linux Only"
      exit 1

  - name: Setup Git
    shell: bash
    run: |
      git config --global user.name "stackver[bot]"
      git config --global user.email "stackver[bot]@users.noreply.github.com"

  - name: Check for Updates (Dry Run)
    shell: bash
    env:
      STACKVER_VERSION: ${{ inputs.stackVerVersion }}
      STACK_FILE: ${{ inputs.stack }}
      DAYS_UNTIL_DANGER: ${{ inputs.daysUntilDanger }}
      DAYS_UNTIL_WARNING: ${{ inputs.daysUntilWarning }}
      GITHUB_TOKEN: ${{ inputs.githubToken }}
    run: |
      docker run --rm \
        -v ${PWD}:/workspace \
        -w /workspace \
        -e GITHUB_TOKEN=${GITHUB_TOKEN} \
        robertlestak/stackver:${STACKVER_VERSION} \
        -f ${STACK_FILE} \
        -d ${DAYS_UNTIL_DANGER} \
        -w ${DAYS_UNTIL_WARNING} \
        -dry-run

  - name: Apply Updates
    if: ${{ inputs.dryRun != 'true' }}
    shell: bash
    env:
      STACKVER_VERSION: ${{ inputs.stackVerVersion }}
      STACK_FILE: ${{ inputs.stack }}
      DAYS_UNTIL_DANGER: ${{ inputs.daysUntilDanger }}
      DAYS_UNTIL_WARNING: ${{ inputs.daysUntilWarning }}
      GITHUB_TOKEN: ${{ inputs.githubToken }}
      PR_BRANCH_BASE: ${{ inputs.prBranch }}
    run: |
      # Generate unique branch name with timestamp
      TIMESTAMP=$(date +%Y%m%d-%H%M%S)
      PR_BRANCH="${PR_BRANCH_BASE}-${TIMESTAMP}"
      echo "PR_BRANCH=${PR_BRANCH}" >> $GITHUB_ENV
      
      # Create and switch to update branch
      git checkout -b ${PR_BRANCH}
      
      # Apply updates and capture output
      UPDATE_OUTPUT=$(docker run --rm \
        -v ${PWD}:/workspace \
        -w /workspace \
        -e GITHUB_TOKEN=${GITHUB_TOKEN} \
        robertlestak/stackver:${STACKVER_VERSION} \
        -f ${STACK_FILE} \
        -d ${DAYS_UNTIL_DANGER} \
        -w ${DAYS_UNTIL_WARNING} \
        -update 2>&1)
      
      echo "$UPDATE_OUTPUT"
      
      # Check if there are changes
      if git diff --quiet; then
        echo "No updates needed"
        exit 0
      fi
      
      # Extract updated dependency names from output
      UPDATED_DEPS=$(echo "$UPDATE_OUTPUT" | grep "Successfully updated" | sed 's/.*Successfully updated \([^:]*\):.*/\1/' | sort -u | tr '\n' ',' | sed 's/,$//')
      echo "UPDATED_DEPS=${UPDATED_DEPS}" >> $GITHUB_ENV
      
      # Commit changes
      git add .
      git commit -m "Update dependency versions via stackver: ${UPDATED_DEPS}"
      git push origin ${PR_BRANCH}

  - name: Create Pull Request
    if: ${{ inputs.dryRun != 'true' }}
    shell: bash
    env:
      GITHUB_TOKEN: ${{ inputs.githubToken }}
      PR_TITLE_BASE: ${{ inputs.prTitle }}
    run: |
      # Generate PR title with updated dependencies
      if [ -n "$UPDATED_DEPS" ]; then
        PR_TITLE="${PR_TITLE_BASE}: ${UPDATED_DEPS}"
      else
        TIMESTAMP=$(date +%Y-%m-%d)
        PR_TITLE="${PR_TITLE_BASE} (${TIMESTAMP})"
      fi
      
      # Create PR
      gh pr create \
        --title "${PR_TITLE}" \
        --body "Automated dependency version updates by stackver. Updated dependencies: ${UPDATED_DEPS:-none}" \
        --head ${PR_BRANCH} \
        --base main
